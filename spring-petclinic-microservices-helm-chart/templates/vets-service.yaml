apiVersion: apps/v1
kind: Deployment
metadata:
  name: vets-service-deployment
  labels:
    app: vets-service-deployment
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vets-service-pod
  template:
    metadata:
      name: vets-service-pod
      labels:
        app: vets-service-pod
    spec:
      initContainers:
        - name: wait-for-config-server
          image: darthcabs/tiny-tools:1
          args:
            - /bin/bash
            - -c
            - >
              set -x;
              while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' {{ .Values.config.configServer.url }})" != "200" ]]; do
                echo '.'
                sleep 15;
              done
        - name: wait-for-discovery-server
          image: darthcabs/tiny-tools:1
          args:
            - /bin/bash
            - -c
            - >
              set -x;
              while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' {{ .Values.config.discoveryServer.url }})" != "200" ]]; do
                echo '.'
                sleep 15;
              done
      containers:
        - name: vets-service-pod
          image: "{{ .Values.images.vetsService.repository }}/{{ .Values.images.vetsService.name }}:{{ .Values.images.vetsService.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8083
          env:
            - name: CONFIG_SERVER_URL
              value: "{{ .Values.config.configServer.url }}"
---
apiVersion: v1
kind: Service
metadata:
  name: vets-service
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: vets-service-pod
  ports:
    - name: vets-service-port
      protocol: TCP
      port: 8083
      targetPort: 8083
